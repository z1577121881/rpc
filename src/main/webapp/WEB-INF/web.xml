<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
         http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">

  <!--指定Sping bean的配置文件所在目录,默认配置在WEB_INF目录下-->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:conf/applicationContext.xml</param-value>
  </context-param>
    <!-- 设计路径变量值 (在log4j中存在引用)-->
   <context-param>
       <param-name>webAppRootKey</param-name>
       <param-value>springmvc.root</param-value>
   </context-param>
  <filter>
    <filter-name>characterEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>characterEncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <!--HiddenHttpMethodFilter 将post,get请求转化为delete,put等请求-->
  <filter>
    <filter-name>HiddenHttpMethodFilter</filter-name>
    <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>HiddenHttpMethodFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <!--修改 HiddenHttpMethodFilter 重新还原为POST和GET请求-->
  <filter>
    <filter-name>HiddenHttpMethodToPostGetFilter</filter-name>
    <filter-class>com.whatdy.filter.HiddenHttpMethodToPostGetFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>HiddenHttpMethodToPostGetFilter</filter-name>
    <url-pattern>/*</url-pattern>
    <dispatcher>FORWARD</dispatcher>
  </filter-mapping>

    <!-- 日志记录 start -->
    <context-param>
        <!-- 日志配置文件路径 -->
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:conf/log4j.properties</param-value>
    </context-param>
    <context-param>
        <!-- 日志页面的刷新间隔 -->
        <param-name>log4jRefreshInterval</param-name>
        <param-value>6000</param-value>
    </context-param>
    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>
    <!-- 日志记录 end -->
    <!--must-->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <!--防止Spring内存溢出监听器-->
  <listener>
    <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
  </listener>
  <!--must-->
  <servlet>
    <servlet-name>springmvc</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:conf/springmvc-servlet.xml</param-value>
      <!-- 默认是/WEB-INF/[servlet-name]-servlet.xml -->
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>springmvc</servlet-name>
    <url-pattern>/</url-pattern>
    <!--
    备注:可以拦截三种请求url,比如设置了*.do,*.action,例如:user/add.action,此方法简单,不会拦截静态资源
    第一种:拦截固定后缀的
    第二种:拦截所有,设置为/ 会拦截所有的请求,包括静态资源.
    第三种:拦截所有,设置为/*,此方法设置方法错误
    -->
  </servlet-mapping>
  <error-page>
    <location>/WEB-INF/errorpage/404.jsp</location>
    <error-code>404</error-code>
  </error-page>
  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>index.html</welcome-file>
  </welcome-file-list>



</web-app>